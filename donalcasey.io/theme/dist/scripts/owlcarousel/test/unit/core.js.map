{"version":3,"sources":["owlcarousel/test/unit/core.js"],"names":["module","test","expect","before_and_after_replace","loop","options","simple","$","replacement","html","expected","owlCarousel","trigger","equal","before_and_after_remove","one","clone","removeAttr","insertAfter","two","all","children","remove","before_and_after_remove_add","simpleClone","text","carousel","data","deepEqual","invalidate","update","get","outerHTML","replace","start"],"mappings":"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","file":"core.js","sourcesContent":["module('Core tests');\n\ntest('replace with loop', function() {\n\texpect(1);\n\tbefore_and_after_replace({ loop: true });\n});\n\ntest('replace without loop', function() {\n\texpect(1);\n\tbefore_and_after_replace({ loop: false });\n});\n\nfunction before_and_after_replace(options) {\n\tvar simple = $('#simple'),\n\t\treplacement = simple.html(),\n\t\texpected = null;\n\t\n\tsimple.owlCarousel(options);\n\t\n\texpected = simple.html();\n\t\n\tsimple.trigger('replace.owl.carousel', [ replacement ]);\n\tsimple.trigger('refresh.owl.carousel');\n\t\n\tequal(simple.html(), expected, 'Inner HTML before and after replace equals.');\n}\n\ntest('remove with loop', function() {\n\texpect(3);\n\t\n\tbefore_and_after_remove({ loop: true });\n});\n\ntest('remove without loop', function() {\n\texpect(3);\n\t\n\tbefore_and_after_remove({ loop: false });\n});\n\nfunction before_and_after_remove(options) {\n\tvar simple = $('#simple'),\n\t\tone = simple.clone().removeAttr('id').insertAfter('#simple'),\n\t\ttwo = one.clone().insertAfter(one),\n\t\tall = two.clone().insertAfter(two);\n\t\n\tone.children(':eq(0)').remove();\n\ttwo.children(':eq(0),:eq(2)').remove();\n\tall.children().remove();\n\n\tsimple.owlCarousel(options);\n\tone.owlCarousel(options);\n\ttwo.owlCarousel(options);\n\tall.owlCarousel(options);\n\t\n\tsimple.trigger('remove.owl.carousel', [ 0 ]);\n\tsimple.trigger('refresh.owl.carousel');\n\t\n\tequal(simple.html(), one.html(), 'Inner HTML before and after remove one equals.');\n\t\n\tsimple.trigger('remove.owl.carousel', [ 1 ]);\n\tsimple.trigger('refresh.owl.carousel');\n\t\n\tequal(simple.html(), two.html(), 'Inner HTML before and after remove two equals.');\n\t\n\tsimple.trigger('remove.owl.carousel', [ 0 ]);\n\tsimple.trigger('refresh.owl.carousel');\n\t\n\tequal(simple.html(), all.html(), 'Inner HTML before and after remove all equals.');\n}\n\ntest('remove and add with loop', function() {\n\texpect(1);\n\t\n\tbefore_and_after_remove_add({ loop: true });\n});\n\ntest('remove and add without loop', function() {\n\texpect(1);\n\t\n\tbefore_and_after_remove_add({ loop: false });\n});\n\nfunction before_and_after_remove_add(options) {\n\tvar simple = $('#simple'),\n\t\tsimpleClone = $('#simple').clone().removeAttr('id').insertAfter('#simple');\n\n    //move the text along as 'add' adds the new element to the add as expected.\n    simpleClone.children(':eq(0)').text('2');\n    simpleClone.children(':eq(1)').text('3');\n    simpleClone.children(':eq(2)').text('1');\n\n\tsimple.owlCarousel(options);\n    simpleClone.owlCarousel(options);\n\n\tsimple.trigger('remove.owl.carousel', [ 0 ]);\n\tsimple.trigger('add.owl.carousel', [ '<li>1</li>' ]);\n\tsimple.trigger('refresh.owl.carousel');\n\t\n\tequal(simple.html(), simpleClone.html(), 'Inner HTML before and after `remove()` and `add()` equals.');\n}\n\ntest('invalidate', function() {\n\texpect(6);\n\t\n\tvar carousel = $('#simple').owlCarousel().data('owl.carousel');\n\t\n\tdeepEqual(carousel.invalidate(), [], 'No invalid parts after initializing.');\n\n\tcarousel.invalidate('first');\n\t\n\tdeepEqual(carousel.invalidate(), [ 'first' ], 'One invalid part after invalidating one.');\n\t\n\tcarousel.invalidate('second');\n\t\n\tdeepEqual(carousel.invalidate(), [ 'first', 'second' ], 'Two invalid parts after invalidating a second one.');\n\t\n\tcarousel.invalidate('second');\n\t\n\tdeepEqual(carousel.invalidate(), [ 'first', 'second' ], 'Two invalid parts after invalidating a part twice.');\n\t\n\tcarousel.update();\n\t\n\tdeepEqual(carousel.invalidate(), [], 'No invalid parts after updating.');\n\t\n\tdeepEqual(carousel.invalidate('first'), [ 'first' ], 'Invalidating one part returns it directly.');\n});\n\ntest('destroy', function() {\n\texpect(1);\n\t\n\tvar simple = $('#simple'),\n\t\texpected = simple.get(0).outerHTML.replace(/\\s{2,}/g, '');\n\t\n\tsimple.owlCarousel().owlCarousel('destroy');\n\t\n\tequal(simple.get(0).outerHTML.replace(/\\s{2,}/g, ''), expected, 'Outer HTML before create and after destroy is equal.');\n});\n\nstart();\n\n"]}